name: Deploy to EC2

on:
  workflow_dispatch:
          inputs:
            my_input:
              description: 'A custom input'
              required: false
              type: string
  push:
    branches: [ main ]
    paths:
      - 'Dockerfile'
      - '.github/workflows/deploy.yml'
      - 'app_code/**'
      - 'shiny-server.conf'
      - 'imgs/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stop: true
          script: |
            set -euo pipefail

            cd /home/ubuntu/T_cell_atlas_aws
            git fetch origin
            git checkout main
            git reset --hard origin/main
            git clean -xdf

            echo "🧹 Removing existing prod container (if any)..."
            docker rm -f atlas || true

            echo "🔍 Freeing port 3839 if used..."
            CONTAINER_ID=$(docker ps --filter "publish=3839" --format "{{.ID}}")
            if [ -n "${CONTAINER_ID:-}" ]; then
              docker stop "$CONTAINER_ID" || true
              docker rm "$CONTAINER_ID" || true
            fi

            echo "🛠 Rebuilding prod image..."
            docker build --no-cache -t atlas:prod .

            echo "🚀 Running new prod container..."
            docker run -d \
              --name atlas \
              --restart unless-stopped \
              -p 3839:3838 \
              -e SHINY_LOG_STDERR=1 \
              -v /home/ubuntu/atlas/data:/srv/shiny-server/atlas/data:ro \
              -v /home/ubuntu/atlas/prod_cache:/srv/shiny-server/atlas/app_cache \
              -v /home/ubuntu/atlas/logs/prod:/var/log/shiny-server \
              atlas:prod

            echo "🩺 Health check..."
            sleep 3
            if ! curl -sSf http://localhost:3839/atlas/ >/dev/null; then
              echo "❌ Health check failed. Container logs:" >&2
              docker logs --tail=200 atlas || true
              exit 1
            fi

            # Optional: reclaim space from old dangling images
            docker image prune -f || true
