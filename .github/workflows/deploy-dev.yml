name: Deploy DEV to EC2

on:
workflow_dispatch:
          inputs:
            my_input:
              description: 'A custom input'
              required: false
              type: string
  push:
    branches: [ dev ]
    paths:
      - 'Dockerfile'
      - '.github/workflows/deploy-dev.yml'
      - 'app_code/**'
      - 'shiny-server.conf'
      - 'imgs/**'

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy DEV to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stop: true
          script: |
            set -euo pipefail

            cd /home/ubuntu/T_cell_atlas_aws

            echo "📦 Resetting working tree to origin/dev..."
            git fetch --all --prune
            # Make sure we're on a local 'dev' branch tracking origin/dev
            git checkout -B dev origin/dev
            # Ensure no stray files remain
            git clean -xdf

            echo "🔐 Setting permissions for mounted volumes..."
            mkdir -p /home/ubuntu/atlas/dev_cache
            sudo chmod 777 /home/ubuntu/atlas/dev_cache
            mkdir -p /home/ubuntu/atlas/logs/dev
            sudo chmod 777 /home/ubuntu/atlas/logs/dev

            echo "🧹 Removing existing DEV container (if any)..."
            docker rm -f atlas-dev || true

            echo "🔍 Freeing port 3840 if used..."
            CID=$(docker ps --filter "publish=3840" --format "{{.ID}}")
            [ -n "${CID:-}" ] && docker stop "$CID" && docker rm "$CID" || true

            echo "🛠 Rebuilding DEV image..."
            docker build --no-cache -t atlas:dev .

            echo "🚀 Running new DEV container..."
            docker run -d \
              --name atlas-dev \
              --restart unless-stopped \
              -p 3840:3838 \
              -e SHINY_LOG_STDERR=1 \
              -v /home/ubuntu/atlas/data:/srv/shiny-server/atlas/data:ro \
              -v /home/ubuntu/atlas/dev_cache:/srv/shiny-server/atlas/app_cache \
              -v /home/ubuntu/atlas/logs/dev:/var/log/shiny-server \
              atlas:dev

            echo "🩺 Health check..."
            sleep 3
            curl -sSf http://localhost:3840/atlas/ >/dev/null || {
              echo "❌ Health check failed. Recent logs:" >&2
              docker logs --tail=200 atlas-dev || true
              exit 1
            }

            docker image prune -f || true
